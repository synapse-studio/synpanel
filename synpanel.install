<?php

/**
 * @file
 * Contains install and update hooks.
 */

use Drupal\Core\Config\InstallStorage;
use Drupal\Core\Config\FileStorage;
use Drupal\Core\Field\BaseFieldDefinition;

/**
 * Implements hook_install().
 */
function synpanel_install() {
  $entity_manager = \Drupal::entityManager();
  $entity_type = $entity_manager->getDefinition('contact_message');

  // Recreate the original entity type definition, in order to notify the
  // manager of what changed. The change of storage backend will trigger
  // schema installation.
  // @see synpanel_test_entity_type_alter()
  $original = clone $entity_type;
  $original->setStorageClass('Drupal\Core\Entity\ContentEntityNullStorage');

  $entity_manager->onEntityTypeUpdate($entity_type, $original);
  _synpanel_ensure_fields();
}

/**
 * Make sure the fields are added.
 */
function synpanel_update_8001() {
  _synpanel_ensure_fields();
}

/**
 * Ensure fields are added.
 */
function _synpanel_ensure_fields() {
  /** @var \Drupal\Core\Entity\EntityFieldManagerInterface $field_manager */
  $field_manager = \Drupal::service('entity_field.manager');

  $entity_definition_update_manager = \Drupal::entityDefinitionUpdateManager();
  foreach (['piwik', 'formurl'] as $field_name) {
    $field_definition = $field_manager->getFieldStorageDefinitions('contact_message')[$field_name];
    $entity_definition_update_manager->installFieldStorageDefinition($field_name, 'contact_message', 'synpanel', $field_definition);
  }
}

/**
 * Defines fields for the user id and ip address, for the contact messages.
 */
function synpanel_update_8002() {
  $storage_definition = BaseFieldDefinition::create('string')
      ->setLabel(t('Piwik ID'))
      ->setDescription(t('Piwik ID of the submitter.'))
      ->setDefaultValueCallback('synpanel_contact_message_default_piwik');
  \Drupal::entityDefinitionUpdateManager()
    ->installFieldStorageDefinition('piwik', 'contact_message', 'synpanel', $storage_definition);
}
/**
 * Make sure the fields are added.
 */
function synpanel_update_8003() {
  _synpanel_ensure_fields();
}
/**
 * Defines fields for the user id and ip address, for the contact messages.
 */
function synpanel_update_8004() {
  $storage_definition = BaseFieldDefinition::create('string')
    ->setLabel(t('Form URL'))
    ->setDescription(t('Form URL of the submission.'))
    ->setDefaultValueCallback('synpanel_contact_message_default_formurl');
  \Drupal::entityDefinitionUpdateManager()
    ->installFieldStorageDefinition('formurl', 'contact_message', 'synpanel', $storage_definition);
}
